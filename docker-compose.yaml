version: '3.5' #docker

services:
  auth:
    container_name: 'auth'
    build: ./auth
    depends_on:
      - db_auth
    networks:
      - server_net
    environment:
      PORT: ${auth_port}
      SK: ${sk}
      DB_HOST_ADDRESS: db_auth
      DB_PORT: ${db_port_auth}
      DB_USERNAME: ${db_user_auth}
      DB_PASSWORD: ${db_password_auth}
      DB_SSL: ${db_use_ssl}
      DB_SK: ${db_sk_auth}
      ACCESS_TOKEN_LIFE: 100
      REFRESH_TOKEN_LIFE: 200

  chats:
    container_name: 'chats'
    build: ./chats
    depends_on:
      - db_chats
    networks:
      - server_net
    environment:
      PORT: ${chats_port}
      SK: ${sk}
      DB_HOST_ADDRESS: db_chats
      DB_PORT: ${db_port_chats}
      DB_USERNAME: ${db_user_chats}
      DB_PASSWORD: ${db_password_chats}
      DB_SSL: ${db_use_ssl}

  db_auth:
    container_name: db_auth
    ports:
      - ${db_port_auth}:${db_port_auth} #opened ports for the container
    environment: #value that sends to our DB
      POSTGRES_USER: ${db_user_auth}
      POSTGRES_PASSWORD: ${db_password_auth}
    image: postgres:13.12 #the image that uses the container from hub.docker.com/_/postgres/tags is a prepared database in the container
    command: # command to set the port we want
      - 'postgres'
      - '-c'
      - 'port=${db_port_auth}'
    volumes: # volume in order to save data when restarting the container
      - db_auth_vol:/var/lib/postgresql/data/ # docker writes from /var/lib/postgresql/data/ to db_auth_vol
    networks:
      - server_net

  db_chats:
    container_name: db_chats
    ports:
      - ${db_port_chats}:${db_port_chats} #opened ports for the container
    environment: #value that sends to our DB
      POSTGRES_USER: ${db_user_chats}
      POSTGRES_PASSWORD: ${db_password_chats}
    image: postgres:13.12 #the image that uses the container from hub.docker.com/_/postgres/tags is a prepared database in the container
    command: # command to set the port we want
      - 'postgres'
      - '-c'
      - 'port=${db_port_chats}'
    volumes: # volume in order to save data when restarting the container
      - db_chats_vol:/var/lib/postgresql/data/ # docker writes from /var/lib/postgresql/data/ to db_chats_vol
    networks:
      - server_net

  nginx:
    container_name: nginx
    ports:
      - 8500:8500
    depends_on:
      - auth
      - chats
    networks:
      - server_net
    build: ./nginx

# indicate which volumes and networks we will use
volumes:
    db_auth_vol: {}
    db_chats_vol: {}
    
networks:
    server_net:
      driver: bridge